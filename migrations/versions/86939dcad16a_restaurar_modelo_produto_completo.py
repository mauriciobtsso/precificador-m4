"""restaurar modelo Produto completo

Revision ID: 86939dcad16a
Revises: 63b5f4afb925
Create Date: 2025-10-14 17:26:50.837323

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '86939dcad16a'
down_revision = '63b5f4afb925'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('produto_historico')
    with op.batch_alter_table('categoria_produto', schema=None) as batch_op:
        batch_op.alter_column('nome',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
        batch_op.drop_constraint(batch_op.f('categoria_produto_pai_id_fkey'), type_='foreignkey')
        batch_op.drop_column('pai_id')
        batch_op.drop_column('nivel')
        batch_op.drop_column('criado_em')
        batch_op.drop_column('atualizado_em')
        batch_op.drop_column('ativo')

    with op.batch_alter_table('produtos', schema=None) as batch_op:
        batch_op.add_column(sa.Column('descricao', sa.Text(), nullable=True))
        batch_op.alter_column('codigo',
               existing_type=sa.VARCHAR(length=64),
               type_=sa.String(length=50),
               nullable=False)
        batch_op.alter_column('nome',
               existing_type=sa.VARCHAR(length=128),
               type_=sa.String(length=255),
               existing_nullable=False)
        batch_op.alter_column('preco_fornecedor',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=10, scale=2),
               existing_nullable=True)
        batch_op.alter_column('desconto_fornecedor',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=5, scale=2),
               existing_nullable=True)
        batch_op.alter_column('margem',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=5, scale=2),
               existing_nullable=True)
        batch_op.alter_column('ipi',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=10, scale=2),
               existing_nullable=True)
        batch_op.alter_column('ipi_tipo',
               existing_type=sa.VARCHAR(length=15),
               type_=sa.String(length=10),
               existing_nullable=True)
        batch_op.alter_column('difal',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=10, scale=2),
               existing_nullable=True)
        batch_op.alter_column('imposto_venda',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=10, scale=2),
               existing_nullable=True)
        batch_op.alter_column('custo_total',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=12, scale=2),
               existing_nullable=True)
        batch_op.alter_column('preco_a_vista',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=12, scale=2),
               existing_nullable=True)
        batch_op.alter_column('lucro_liquido_real',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=12, scale=2),
               existing_nullable=True)
        batch_op.alter_column('lucro_alvo',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=12, scale=2),
               existing_nullable=True)
        batch_op.alter_column('preco_final',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Numeric(precision=12, scale=2),
               existing_nullable=True)
        batch_op.alter_column('criado_em',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
        batch_op.alter_column('atualizado_em',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
        batch_op.drop_constraint(batch_op.f('produtos_sku_key'), type_='unique')
        batch_op.create_unique_constraint(None, ['codigo'])
        batch_op.drop_column('alerta_estoque')
        batch_op.drop_column('quantidade')
        batch_op.drop_column('estoque_minimo')
        batch_op.drop_column('modelo')
        batch_op.drop_column('valor_ipi')
        batch_op.drop_column('marca')
        batch_op.drop_column('imagem_url')
        batch_op.drop_column('sku')
        batch_op.drop_column('ativo')
        batch_op.drop_column('valor_difal')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('produtos', schema=None) as batch_op:
        batch_op.add_column(sa.Column('valor_difal', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('ativo', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('sku', sa.VARCHAR(length=64), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('imagem_url', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('marca', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('valor_ipi', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('modelo', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('estoque_minimo', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('quantidade', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('alerta_estoque', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_unique_constraint(batch_op.f('produtos_sku_key'), ['sku'], postgresql_nulls_not_distinct=False)
        batch_op.alter_column('atualizado_em',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('criado_em',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('preco_final',
               existing_type=sa.Numeric(precision=12, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
        batch_op.alter_column('lucro_alvo',
               existing_type=sa.Numeric(precision=12, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
        batch_op.alter_column('lucro_liquido_real',
               existing_type=sa.Numeric(precision=12, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
        batch_op.alter_column('preco_a_vista',
               existing_type=sa.Numeric(precision=12, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
        batch_op.alter_column('custo_total',
               existing_type=sa.Numeric(precision=12, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
        batch_op.alter_column('imposto_venda',
               existing_type=sa.Numeric(precision=10, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
        batch_op.alter_column('difal',
               existing_type=sa.Numeric(precision=10, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
        batch_op.alter_column('ipi_tipo',
               existing_type=sa.String(length=10),
               type_=sa.VARCHAR(length=15),
               existing_nullable=True)
        batch_op.alter_column('ipi',
               existing_type=sa.Numeric(precision=10, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
        batch_op.alter_column('margem',
               existing_type=sa.Numeric(precision=5, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
        batch_op.alter_column('desconto_fornecedor',
               existing_type=sa.Numeric(precision=5, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
        batch_op.alter_column('preco_fornecedor',
               existing_type=sa.Numeric(precision=10, scale=2),
               type_=sa.DOUBLE_PRECISION(precision=53),
               existing_nullable=True)
        batch_op.alter_column('nome',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=128),
               existing_nullable=False)
        batch_op.alter_column('codigo',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=64),
               nullable=True)
        batch_op.drop_column('descricao')

    with op.batch_alter_table('categoria_produto', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ativo', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('atualizado_em', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('criado_em', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('nivel', sa.SMALLINT(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('pai_id', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.create_foreign_key(batch_op.f('categoria_produto_pai_id_fkey'), 'categoria_produto', ['pai_id'], ['id'])
        batch_op.alter_column('nome',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)

    op.create_table('produto_historico',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('produto_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('usuario_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('campo', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('valor_antigo', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('valor_novo', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('data_alteracao', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['produto_id'], ['produtos.id'], name=op.f('produto_historico_produto_id_fkey')),
    sa.ForeignKeyConstraint(['usuario_id'], ['users.id'], name=op.f('produto_historico_usuario_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('produto_historico_pkey'))
    )
    # ### end Alembic commands ###
