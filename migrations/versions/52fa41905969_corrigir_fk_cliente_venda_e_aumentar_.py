"""Corrigir FK Cliente-Venda e aumentar campos

Revision ID: 52fa41905969
Revises: 0f7ebc90cfdf
Create Date: 2025-09-16 16:24:22.747344

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '52fa41905969'
down_revision = '0f7ebc90cfdf'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('configuracoes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('chave', sa.String(length=64), nullable=False),
    sa.Column('valor', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('chave')
    )
    op.create_table('produtos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sku', sa.String(length=64), nullable=False),
    sa.Column('nome', sa.String(length=128), nullable=False),
    sa.Column('preco_fornecedor', sa.Float(), nullable=True),
    sa.Column('desconto_fornecedor', sa.Float(), nullable=True),
    sa.Column('custo_total', sa.Float(), nullable=True),
    sa.Column('margem', sa.Float(), nullable=True),
    sa.Column('lucro_alvo', sa.Float(), nullable=True),
    sa.Column('preco_final', sa.Float(), nullable=True),
    sa.Column('ipi', sa.Float(), nullable=True),
    sa.Column('ipi_tipo', sa.String(length=2), nullable=True),
    sa.Column('difal', sa.Float(), nullable=True),
    sa.Column('imposto_venda', sa.Float(), nullable=True),
    sa.Column('valor_ipi', sa.Float(), nullable=True),
    sa.Column('valor_difal', sa.Float(), nullable=True),
    sa.Column('preco_a_vista', sa.Float(), nullable=True),
    sa.Column('lucro_liquido_real', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('sku')
    )
    op.create_table('taxas',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('numero_parcelas', sa.Integer(), nullable=False),
    sa.Column('juros', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.drop_table('user')
    op.drop_table('taxa')
    op.drop_table('configuracao')
    op.drop_table('produto')
    with op.batch_alter_table('clientes', schema=None) as batch_op:
        batch_op.alter_column('sexo',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=10),
               existing_nullable=True)
        batch_op.alter_column('documento',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=30),
               nullable=True)
        batch_op.alter_column('rg',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=30),
               existing_nullable=True)
        batch_op.alter_column('rg_emissor',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.String(length=100),
               existing_nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.VARCHAR(length=120),
               type_=sa.String(length=150),
               existing_nullable=True)
        batch_op.alter_column('endereco',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('estado',
               existing_type=sa.VARCHAR(length=2),
               type_=sa.String(length=50),
               existing_nullable=True)
        batch_op.alter_column('cep',
               existing_type=sa.VARCHAR(length=15),
               type_=sa.String(length=20),
               existing_nullable=True)
        batch_op.alter_column('cr',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=30),
               existing_nullable=True)
        batch_op.alter_column('cr_emissor',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('clientes', schema=None) as batch_op:
        batch_op.alter_column('cr_emissor',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.alter_column('cr',
               existing_type=sa.String(length=30),
               type_=sa.VARCHAR(length=50),
               existing_nullable=True)
        batch_op.alter_column('cep',
               existing_type=sa.String(length=20),
               type_=sa.VARCHAR(length=15),
               existing_nullable=True)
        batch_op.alter_column('estado',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=2),
               existing_nullable=True)
        batch_op.alter_column('endereco',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=200),
               existing_nullable=True)
        batch_op.alter_column('email',
               existing_type=sa.String(length=150),
               type_=sa.VARCHAR(length=120),
               existing_nullable=True)
        batch_op.alter_column('rg_emissor',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
        batch_op.alter_column('rg',
               existing_type=sa.String(length=30),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)
        batch_op.alter_column('documento',
               existing_type=sa.String(length=30),
               type_=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('sexo',
               existing_type=sa.String(length=10),
               type_=sa.VARCHAR(length=20),
               existing_nullable=True)

    op.create_table('produto',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('sku', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('nome', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('preco_fornecedor', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('desconto_fornecedor', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('custo_total', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('margem', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('lucro_alvo', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('preco_final', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ipi', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('ipi_tipo', sa.VARCHAR(length=2), autoincrement=False, nullable=True),
    sa.Column('difal', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('imposto_venda', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('valor_ipi', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('valor_difal', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('preco_a_vista', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('lucro_liquido_real', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('produto_pkey')),
    sa.UniqueConstraint('sku', name=op.f('produto_sku_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('configuracao',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('chave', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('valor', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('configuracao_pkey')),
    sa.UniqueConstraint('chave', name=op.f('configuracao_chave_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_table('taxa',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('numero_parcelas', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('juros', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('taxa_pkey'))
    )
    op.create_table('user',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('username', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('user_pkey')),
    sa.UniqueConstraint('username', name=op.f('user_username_key'), postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.drop_table('users')
    op.drop_table('taxas')
    op.drop_table('produtos')
    op.drop_table('configuracoes')
    # ### end Alembic commands ###
